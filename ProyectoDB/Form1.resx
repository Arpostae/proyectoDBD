<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAPBQTFRF////
        9pg4/LM7u8LNxMrZU1ZcXF9m/vLp//Xp/K4j9ZAeuL/LWFth+aY66Orw5efs/LEx9pUu+b2M/c2Nwcvf
        uMTS67t85KZ1QVBe8pY5+LE9S1hp/7Y5/Zs29PX4xcvaSlNd2d3j0dbiVFtnyc/Y/cl7//ry36NF14pC
        4I8/zppKzodEtX1K8K0+nH9XhGlUwIFI/uS9/deg9seH+8WN+9Gn/erZ/urO/LpP+LBq/Ny+/dur+a9o
        +bt//uXD/L9i96ZV2JVFcWliZFxajm1Sq4dTuY9Qo3ZOx5ZM1J5IfXBevZFPqHdNm3hV+8yd96FHdiqP
        RwAAB31JREFUeF7tnft/2jYQwGMoXQItxMseNHWNDYQk3dLX2iR9bOmaPre1+f//m8n4AIMsWY+TJVN9
        f40/5L65051sQNmph7g/SMfj8Wg0utUmTKdpOojhZ40nHozHtwpkhu12L6M9TeOGexK7EYgtyQ2B3BKu
        bhxxStllgNsKYtlIyX6pHgG81mieZJyCTgkgtUmvN22OY7zWWTYBIxri2IdXcBu+H8eQ0IQ8VvnxDRvg
        OAANDqDCpJfCa7lIzOqfRUCETa/t7HLkNNAC4MGjN4ZXdIvqFZgDFlx6bQdXYx8EKgGJCtxbjWIVmgEK
        VfSm8MqOIFihGWBQiVOVKtRDF4CACM4oSgnKGLqiGEPogkDwQvScmIySglKGTijKCsoZOqAoLShpaH8t
        SjWZORC4OHYV5QXlDdvwu6wgMeiXQNji2NzdCNwNUrTnD0qlsLdHlesyo/E4HfT7/cEgHU+nmSgIVNMb
        wG+sG/FFOEr7G/0ijtPMEhQqsdNtRBfhiPkoNE4FHe0sRcEbwjF/ZA+mQo5WlqJQjY6ry6sv5lh/nYrU
        qIBfRv9WtWP9dSrSR8W3lKmAYt0b1OoalXpeFguUKlxaE9VtRnaEVaax5mZTmUL5xtCvzCJcWAtV27WR
        SueLQYRFrUmsSKGSYLVijUmsWIUjuEyaCsUat6cVs1B9OMcVaxEuM07FLFQXrGo3tc1Efgr1ohhwFeva
        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
        538RkG9CWZZc1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>