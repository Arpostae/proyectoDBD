<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAPBQTFRF////
        9pg4/LM7u8LNxMrZU1ZcXF9m/vLp//Xp/K4j9ZAeuL/LWFth+aY66Orw5efs/LEx9pUu+b2M/c2Nwcvf
        uMTS67t85KZ1QVBe8pY5+LE9S1hp/7Y5/Zs29PX4xcvaSlNd2d3j0dbiVFtnyc/Y/cl7//ry36NF14pC
        4I8/zppKzodEtX1K8K0+nH9XhGlUwIFI/uS9/deg9seH+8WN+9Gn/erZ/urO/LpP+LBq/Ny+/dur+a9o
        +bt//uXD/L9i96ZV2JVFcWliZFxajm1Sq4dTuY9Qo3ZOx5ZM1J5IfXBevZFPqHdNm3hV+8yd96FHdiqP
        RwAAB4VJREFUeF7t3Xlf2zYYwHHs1AziNsGwI6WqYych0G70Wgv02GhL6bGt7ft/N/uYJLbz2JJ1PLLk
        VL+/U9AXWZKTQLq11UrxYJhOJpPxeHyr1+v1ZrM0HcbwQV0tHk4mt0plwl4vzOrN0rjjzng4GZd1hXDZ
        Qgn/WVeK04oua024VHYSOajl1Qk7iYxT6CqCumVhOOuOMV7bWWCQlheGswH8UlbG9jGEGbID89jkYws7
        YBxCTzVogoUp/KIWFdP2z3JQVCnsWbscGRtoKQiqKZzAL21FzStwEeTUFfYsXI0DKKEFNfXZtxr5rtAs
        aKEUzuC3MBvnFZoFKbSsulK59tBVUMLIGqIQUERoCzGGBnZQwSq04mQUBAoJrSCKAsWEFhCFgYJC82tR
        aJO5CQoaM0sUB4oLe/CbtpnAQZ8Hx9+YybsbjmeDlW5eKYUIdubuUcV2mfFkkg4Hg8FwmE5mswwKJdTC
        IfzWLcW/CMfpAOwXcZxmSmihZWa34V2EY+pLoXHKaTSzFDmfEE7YR/ZwxmU0shS5rtEJbfqKBnzG5i+E
        Hc81yuHLGtxqNrZ/nfLso+zrs1zKQeT/ajg1X6NCr5fFHJcq/Dd6a95mRI+wxmlsebNpnEK+FVhu0ERs
        dRKbbtfG4sCtrRiKQK1OYsMUSgGbiS1OYsMqHMPH89ZAbPH2tOEslJvBrLhhLcLH66rhLJQHNm03rZ2J
        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
</value>
  </data>
</root>